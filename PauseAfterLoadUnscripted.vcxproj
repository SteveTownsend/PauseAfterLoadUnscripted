<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{8BB89154-A3EA-399B-845A-695BB0819A79}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <VcpkgEnabled>false</VcpkgEnabled>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>PauseAfterLoadUnscripted</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="do_not_import_user.props" Condition="exists('do_not_import_user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\GitHub\PauseAfterLoadUnscripted\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">PauseAfterLoadUnscripted.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">PauseAfterLoadUnscripted</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.dll</TargetExt>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\GitHub\PauseAfterLoadUnscripted\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">PauseAfterLoadUnscripted.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">PauseAfterLoadUnscripted</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.dll</TargetExt>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">I:\GitHub\PauseAfterLoadUnscripted\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">PauseAfterLoadUnscripted.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">PauseAfterLoadUnscripted</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.dll</TargetExt>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">I:\GitHub\PauseAfterLoadUnscripted\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">PauseAfterLoadUnscripted.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">PauseAfterLoadUnscripted</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.dll</TargetExt>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>I:\GitHub\PauseAfterLoadUnscripted\CommonLibSSE_INCLUDE_DIRS;I:\GitHub\PauseAfterLoadUnscripted\src;I:\GitHub\PauseAfterLoadUnscripted\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "I:/GitHub/PauseAfterLoadUnscripted/vcpkg_installed/x64-windows/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4005;4061;4068;4200;4201;4265;4266;4371;4514;4582;4583;4623;4625;4626;4710;4711;4820;5026;5027;5045;5053;5204;5220;4251;4275</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Debug/cmake_pch.hxx</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>I:/GitHub/PauseAfterLoadUnscripted/PauseAfterLoadUnscripted.dir/Debug/cmake_pch.pch</PrecompiledHeaderOutputFile>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <TreatSpecificWarningsAsErrors>4715</TreatSpecificWarningsAsErrors>
      <UseFullPaths>false</UseFullPaths>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;__CMAKE_COMMONLIBSSE_PLUGIN=1;UNICODE;_UNICODE;NOMINMAX;_AMD64_;WIN32_LEAN_AND_MEAN;WINVER=0x0601;_WIN32_WINNT=0x0601;SKSE_SUPPORT_XBYAK=1;ENABLE_SKYRIM_SE=1;ENABLE_SKYRIM_AE=1;ENABLE_SKYRIM_VR=1;HAS_SKYRIM_MULTI_TARGETING=1;FMT_SHARED;SPDLOG_SHARED_LIB;SPDLOG_COMPILED_LIB;SPDLOG_FMT_EXTERNAL;CMAKE_INTDIR="Debug";PauseAfterLoadUnscripted_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;__CMAKE_COMMONLIBSSE_PLUGIN=1;UNICODE;_UNICODE;NOMINMAX;_AMD64_;WIN32_LEAN_AND_MEAN;WINVER=0x0601;_WIN32_WINNT=0x0601;SKSE_SUPPORT_XBYAK=1;ENABLE_SKYRIM_SE=1;ENABLE_SKYRIM_AE=1;ENABLE_SKYRIM_VR=1;HAS_SKYRIM_MULTI_TARGETING=1;FMT_SHARED;SPDLOG_SHARED_LIB;SPDLOG_COMPILED_LIB;SPDLOG_FMT_EXTERNAL;CMAKE_INTDIR=\"Debug\";PauseAfterLoadUnscripted_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>I:\GitHub\PauseAfterLoadUnscripted\CommonLibSSE_INCLUDE_DIRS;I:\GitHub\PauseAfterLoadUnscripted\src;I:\GitHub\PauseAfterLoadUnscripted\include;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>I:\GitHub\PauseAfterLoadUnscripted\CommonLibSSE_INCLUDE_DIRS;I:\GitHub\PauseAfterLoadUnscripted\src;I:\GitHub\PauseAfterLoadUnscripted\include;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>				</Message>
      <Command>setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noprofile -executionpolicy Bypass -file I:/GitHub/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary I:/GitHub/PauseAfterLoadUnscripted/Debug/PauseAfterLoadUnscripted.dll -installedDir I:/GitHub/PauseAfterLoadUnscripted/vcpkg_installed/x64-windows/debug/bin -OutVariable out
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"G:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/GitHub/PauseAfterLoadUnscripted/contrib/Distribution/PluginRelease/
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"G:\Program Files\CMake\bin\cmake.exe" -E copy I:/GitHub/PauseAfterLoadUnscripted/Debug/PauseAfterLoadUnscripted.dll I:/GitHub/PauseAfterLoadUnscripted/contrib/Distribution/PluginRelease/
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"G:\Program Files\CMake\bin\cmake.exe" -E copy I:/GitHub/PauseAfterLoadUnscripted/Debug/PauseAfterLoadUnscripted.dll I:/GitHub/PauseAfterLoadUnscripted/zip/SKSE/Plugins/
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
cd I:\GitHub\PauseAfterLoadUnscripted\zip
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"G:\Program Files\CMake\bin\cmake.exe" -E tar cf I:/GitHub/PauseAfterLoadUnscripted/PauseAfterLoadUnscripted_1.1.1.7z --format=7zip -- .
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>vcpkg_installed\x64-windows\debug\lib\CommonLibSSE.lib;Dbghelp.lib;vcpkg_installed\x64-windows\debug\lib\spdlogd.lib;vcpkg_installed\x64-windows\debug\lib\fmtd.lib;Version.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>I:/GitHub/PauseAfterLoadUnscripted/Debug/PauseAfterLoadUnscripted.lib</ImportLibrary>
      <ProgramDataBaseFile>I:/GitHub/PauseAfterLoadUnscripted/Debug/PauseAfterLoadUnscripted.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>I:\GitHub\PauseAfterLoadUnscripted\CommonLibSSE_INCLUDE_DIRS;I:\GitHub\PauseAfterLoadUnscripted\src;I:\GitHub\PauseAfterLoadUnscripted\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "I:/GitHub/PauseAfterLoadUnscripted/vcpkg_installed/x64-windows/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4005;4061;4068;4200;4201;4265;4266;4371;4514;4582;4583;4623;4625;4626;4710;4711;4820;5026;5027;5045;5053;5204;5220;4251;4275</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Release/cmake_pch.hxx</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>I:/GitHub/PauseAfterLoadUnscripted/PauseAfterLoadUnscripted.dir/Release/cmake_pch.pch</PrecompiledHeaderOutputFile>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <TreatSpecificWarningsAsErrors>4715</TreatSpecificWarningsAsErrors>
      <UseFullPaths>false</UseFullPaths>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;__CMAKE_COMMONLIBSSE_PLUGIN=1;UNICODE;_UNICODE;NOMINMAX;_AMD64_;WIN32_LEAN_AND_MEAN;WINVER=0x0601;_WIN32_WINNT=0x0601;SKSE_SUPPORT_XBYAK=1;ENABLE_SKYRIM_SE=1;ENABLE_SKYRIM_AE=1;ENABLE_SKYRIM_VR=1;HAS_SKYRIM_MULTI_TARGETING=1;FMT_SHARED;SPDLOG_SHARED_LIB;SPDLOG_COMPILED_LIB;SPDLOG_FMT_EXTERNAL;CMAKE_INTDIR="Release";PauseAfterLoadUnscripted_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;__CMAKE_COMMONLIBSSE_PLUGIN=1;UNICODE;_UNICODE;NOMINMAX;_AMD64_;WIN32_LEAN_AND_MEAN;WINVER=0x0601;_WIN32_WINNT=0x0601;SKSE_SUPPORT_XBYAK=1;ENABLE_SKYRIM_SE=1;ENABLE_SKYRIM_AE=1;ENABLE_SKYRIM_VR=1;HAS_SKYRIM_MULTI_TARGETING=1;FMT_SHARED;SPDLOG_SHARED_LIB;SPDLOG_COMPILED_LIB;SPDLOG_FMT_EXTERNAL;CMAKE_INTDIR=\"Release\";PauseAfterLoadUnscripted_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>I:\GitHub\PauseAfterLoadUnscripted\CommonLibSSE_INCLUDE_DIRS;I:\GitHub\PauseAfterLoadUnscripted\src;I:\GitHub\PauseAfterLoadUnscripted\include;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>I:\GitHub\PauseAfterLoadUnscripted\CommonLibSSE_INCLUDE_DIRS;I:\GitHub\PauseAfterLoadUnscripted\src;I:\GitHub\PauseAfterLoadUnscripted\include;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>				</Message>
      <Command>setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noprofile -executionpolicy Bypass -file I:/GitHub/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary I:/GitHub/PauseAfterLoadUnscripted/Release/PauseAfterLoadUnscripted.dll -installedDir I:/GitHub/PauseAfterLoadUnscripted/vcpkg_installed/x64-windows/bin -OutVariable out
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"G:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/GitHub/PauseAfterLoadUnscripted/contrib/Distribution/PluginRelease/
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"G:\Program Files\CMake\bin\cmake.exe" -E copy I:/GitHub/PauseAfterLoadUnscripted/Release/PauseAfterLoadUnscripted.dll I:/GitHub/PauseAfterLoadUnscripted/contrib/Distribution/PluginRelease/
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"G:\Program Files\CMake\bin\cmake.exe" -E copy I:/GitHub/PauseAfterLoadUnscripted/Release/PauseAfterLoadUnscripted.dll I:/GitHub/PauseAfterLoadUnscripted/zip/SKSE/Plugins/
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
cd I:\GitHub\PauseAfterLoadUnscripted\zip
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"G:\Program Files\CMake\bin\cmake.exe" -E tar cf I:/GitHub/PauseAfterLoadUnscripted/PauseAfterLoadUnscripted_1.1.1.7z --format=7zip -- .
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>vcpkg_installed\x64-windows\lib\CommonLibSSE.lib;Dbghelp.lib;vcpkg_installed\x64-windows\lib\spdlog.lib;vcpkg_installed\x64-windows\lib\fmt.lib;Version.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>I:/GitHub/PauseAfterLoadUnscripted/Release/PauseAfterLoadUnscripted.lib</ImportLibrary>
      <OptimizeReferences>true</OptimizeReferences>
      <ProgramDataBaseFile>I:/GitHub/PauseAfterLoadUnscripted/Release/PauseAfterLoadUnscripted.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>I:\GitHub\PauseAfterLoadUnscripted\CommonLibSSE_INCLUDE_DIRS;I:\GitHub\PauseAfterLoadUnscripted\src;I:\GitHub\PauseAfterLoadUnscripted\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "I:/GitHub/PauseAfterLoadUnscripted/vcpkg_installed/x64-windows/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DisableSpecificWarnings>4005;4061;4068;4200;4201;4265;4266;4371;4514;4582;4583;4623;4625;4626;4710;4711;4820;5026;5027;5045;5053;5204;5220;4251;4275</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/MinSizeRel/cmake_pch.hxx</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>I:/GitHub/PauseAfterLoadUnscripted/PauseAfterLoadUnscripted.dir/MinSizeRel/cmake_pch.pch</PrecompiledHeaderOutputFile>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <TreatSpecificWarningsAsErrors>4715</TreatSpecificWarningsAsErrors>
      <UseFullPaths>false</UseFullPaths>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;__CMAKE_COMMONLIBSSE_PLUGIN=1;UNICODE;_UNICODE;NOMINMAX;_AMD64_;WIN32_LEAN_AND_MEAN;WINVER=0x0601;_WIN32_WINNT=0x0601;SKSE_SUPPORT_XBYAK=1;ENABLE_SKYRIM_SE=1;ENABLE_SKYRIM_AE=1;ENABLE_SKYRIM_VR=1;HAS_SKYRIM_MULTI_TARGETING=1;FMT_SHARED;SPDLOG_SHARED_LIB;SPDLOG_COMPILED_LIB;SPDLOG_FMT_EXTERNAL;CMAKE_INTDIR="MinSizeRel";PauseAfterLoadUnscripted_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;__CMAKE_COMMONLIBSSE_PLUGIN=1;UNICODE;_UNICODE;NOMINMAX;_AMD64_;WIN32_LEAN_AND_MEAN;WINVER=0x0601;_WIN32_WINNT=0x0601;SKSE_SUPPORT_XBYAK=1;ENABLE_SKYRIM_SE=1;ENABLE_SKYRIM_AE=1;ENABLE_SKYRIM_VR=1;HAS_SKYRIM_MULTI_TARGETING=1;FMT_SHARED;SPDLOG_SHARED_LIB;SPDLOG_COMPILED_LIB;SPDLOG_FMT_EXTERNAL;CMAKE_INTDIR=\"MinSizeRel\";PauseAfterLoadUnscripted_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>I:\GitHub\PauseAfterLoadUnscripted\CommonLibSSE_INCLUDE_DIRS;I:\GitHub\PauseAfterLoadUnscripted\src;I:\GitHub\PauseAfterLoadUnscripted\include;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>I:\GitHub\PauseAfterLoadUnscripted\CommonLibSSE_INCLUDE_DIRS;I:\GitHub\PauseAfterLoadUnscripted\src;I:\GitHub\PauseAfterLoadUnscripted\include;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>				</Message>
      <Command>setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noprofile -executionpolicy Bypass -file I:/GitHub/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary I:/GitHub/PauseAfterLoadUnscripted/MinSizeRel/PauseAfterLoadUnscripted.dll -installedDir I:/GitHub/PauseAfterLoadUnscripted/vcpkg_installed/x64-windows/bin -OutVariable out
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"G:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/GitHub/PauseAfterLoadUnscripted/contrib/Distribution/PluginRelease/
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"G:\Program Files\CMake\bin\cmake.exe" -E copy I:/GitHub/PauseAfterLoadUnscripted/MinSizeRel/PauseAfterLoadUnscripted.dll I:/GitHub/PauseAfterLoadUnscripted/contrib/Distribution/PluginRelease/
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"G:\Program Files\CMake\bin\cmake.exe" -E copy I:/GitHub/PauseAfterLoadUnscripted/MinSizeRel/PauseAfterLoadUnscripted.dll I:/GitHub/PauseAfterLoadUnscripted/zip/SKSE/Plugins/
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
cd I:\GitHub\PauseAfterLoadUnscripted\zip
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"G:\Program Files\CMake\bin\cmake.exe" -E tar cf I:/GitHub/PauseAfterLoadUnscripted/PauseAfterLoadUnscripted_1.1.1.7z --format=7zip -- .
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>vcpkg_installed\x64-windows\lib\CommonLibSSE.lib;Dbghelp.lib;vcpkg_installed\x64-windows\lib\spdlog.lib;vcpkg_installed\x64-windows\lib\fmt.lib;Version.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>I:/GitHub/PauseAfterLoadUnscripted/MinSizeRel/PauseAfterLoadUnscripted.lib</ImportLibrary>
      <ProgramDataBaseFile>I:/GitHub/PauseAfterLoadUnscripted/MinSizeRel/PauseAfterLoadUnscripted.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>I:\GitHub\PauseAfterLoadUnscripted\CommonLibSSE_INCLUDE_DIRS;I:\GitHub\PauseAfterLoadUnscripted\src;I:\GitHub\PauseAfterLoadUnscripted\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "I:/GitHub/PauseAfterLoadUnscripted/vcpkg_installed/x64-windows/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4005;4061;4068;4200;4201;4265;4266;4371;4514;4582;4583;4623;4625;4626;4710;4711;4820;5026;5027;5045;5053;5204;5220;4251;4275</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/RelWithDebInfo/cmake_pch.hxx</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>I:/GitHub/PauseAfterLoadUnscripted/PauseAfterLoadUnscripted.dir/RelWithDebInfo/cmake_pch.pch</PrecompiledHeaderOutputFile>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <TreatSpecificWarningsAsErrors>4715</TreatSpecificWarningsAsErrors>
      <UseFullPaths>false</UseFullPaths>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;__CMAKE_COMMONLIBSSE_PLUGIN=1;UNICODE;_UNICODE;NOMINMAX;_AMD64_;WIN32_LEAN_AND_MEAN;WINVER=0x0601;_WIN32_WINNT=0x0601;SKSE_SUPPORT_XBYAK=1;ENABLE_SKYRIM_SE=1;ENABLE_SKYRIM_AE=1;ENABLE_SKYRIM_VR=1;HAS_SKYRIM_MULTI_TARGETING=1;FMT_SHARED;SPDLOG_SHARED_LIB;SPDLOG_COMPILED_LIB;SPDLOG_FMT_EXTERNAL;CMAKE_INTDIR="RelWithDebInfo";PauseAfterLoadUnscripted_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;__CMAKE_COMMONLIBSSE_PLUGIN=1;UNICODE;_UNICODE;NOMINMAX;_AMD64_;WIN32_LEAN_AND_MEAN;WINVER=0x0601;_WIN32_WINNT=0x0601;SKSE_SUPPORT_XBYAK=1;ENABLE_SKYRIM_SE=1;ENABLE_SKYRIM_AE=1;ENABLE_SKYRIM_VR=1;HAS_SKYRIM_MULTI_TARGETING=1;FMT_SHARED;SPDLOG_SHARED_LIB;SPDLOG_COMPILED_LIB;SPDLOG_FMT_EXTERNAL;CMAKE_INTDIR=\"RelWithDebInfo\";PauseAfterLoadUnscripted_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>I:\GitHub\PauseAfterLoadUnscripted\CommonLibSSE_INCLUDE_DIRS;I:\GitHub\PauseAfterLoadUnscripted\src;I:\GitHub\PauseAfterLoadUnscripted\include;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>I:\GitHub\PauseAfterLoadUnscripted\CommonLibSSE_INCLUDE_DIRS;I:\GitHub\PauseAfterLoadUnscripted\src;I:\GitHub\PauseAfterLoadUnscripted\include;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>				</Message>
      <Command>setlocal
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noprofile -executionpolicy Bypass -file I:/GitHub/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary I:/GitHub/PauseAfterLoadUnscripted/RelWithDebInfo/PauseAfterLoadUnscripted.dll -installedDir I:/GitHub/PauseAfterLoadUnscripted/vcpkg_installed/x64-windows/bin -OutVariable out
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"G:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/GitHub/PauseAfterLoadUnscripted/contrib/Distribution/PluginRelease/
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"G:\Program Files\CMake\bin\cmake.exe" -E copy I:/GitHub/PauseAfterLoadUnscripted/RelWithDebInfo/PauseAfterLoadUnscripted.dll I:/GitHub/PauseAfterLoadUnscripted/contrib/Distribution/PluginRelease/
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"G:\Program Files\CMake\bin\cmake.exe" -E copy I:/GitHub/PauseAfterLoadUnscripted/RelWithDebInfo/PauseAfterLoadUnscripted.dll I:/GitHub/PauseAfterLoadUnscripted/zip/SKSE/Plugins/
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
cd I:\GitHub\PauseAfterLoadUnscripted\zip
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"G:\Program Files\CMake\bin\cmake.exe" -E tar cf I:/GitHub/PauseAfterLoadUnscripted/PauseAfterLoadUnscripted_1.1.1.7z --format=7zip -- .
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>vcpkg_installed\x64-windows\lib\CommonLibSSE.lib;Dbghelp.lib;vcpkg_installed\x64-windows\lib\spdlog.lib;vcpkg_installed\x64-windows\lib\fmt.lib;Version.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>I:/GitHub/PauseAfterLoadUnscripted/RelWithDebInfo/PauseAfterLoadUnscripted.lib</ImportLibrary>
      <ProgramDataBaseFile>I:/GitHub/PauseAfterLoadUnscripted/RelWithDebInfo/PauseAfterLoadUnscripted.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="I:\GitHub\PauseAfterLoadUnscripted\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule I:/GitHub/PauseAfterLoadUnscripted/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"G:\Program Files\CMake\bin\cmake.exe" -SI:/GitHub/PauseAfterLoadUnscripted -BI:/GitHub/PauseAfterLoadUnscripted --check-stamp-file I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXCompiler.cmake.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXCompilerABI.cpp;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCompilerIdDetection.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDependentOption.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCXXCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompileFeatures.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompilerABI.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompilerId.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineRCCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineSystem.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeFindBinUtils.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeFindDependencyMacro.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeParseImplicitIncludeInfo.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeParseImplicitLinkInfo.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeParseLibraryArchitecture.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCCompiler.cmake.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystem.cmake.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeTestCXXCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeTestCompilerCommon.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeTestRCCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckCXXSourceCompiles.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported\CMakeLists-CXX.txt.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported\foo.cpp;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported\main.cpp;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIncludeFileCXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckLibraryExists.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\ADSP-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\ARMCC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\ARMClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\AppleClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Borland-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Cray-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CrayClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\GHS-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IAR-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Intel-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVHPC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\OrangeC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\PGI-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\PathScale-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\SCO-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\TI-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Tasking-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Watcom-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CompilerId\VS-10.vcxproj.in;G:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\FindThreads.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\GNUInstallDirs.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Internal\CheckSourceCompiles.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Internal\FeatureTesting.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Determine-CXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\3.28.1\CMakeCXXCompiler.cmake;I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\3.28.1\CMakeRCCompiler.cmake;I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\3.28.1\CMakeSystem.cmake;I:\GitHub\PauseAfterLoadUnscripted\cmake\version.rc.in;I:\GitHub\PauseAfterLoadUnscripted\vcpkg-configuration.json;I:\GitHub\PauseAfterLoadUnscripted\vcpkg.json;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE-targets-debug.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE-targets-release.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE-targets.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSEConfig.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-config-version.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-config.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-targets-debug.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-targets-release.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-targets.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfig.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigTargets-debug.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigTargets-release.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigTargets.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigVersion.cmake;I:\GitHub\vcpkg\scripts\buildsystems\vcpkg.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule I:/GitHub/PauseAfterLoadUnscripted/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"G:\Program Files\CMake\bin\cmake.exe" -SI:/GitHub/PauseAfterLoadUnscripted -BI:/GitHub/PauseAfterLoadUnscripted --check-stamp-file I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXCompiler.cmake.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXCompilerABI.cpp;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCompilerIdDetection.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDependentOption.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCXXCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompileFeatures.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompilerABI.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompilerId.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineRCCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineSystem.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeFindBinUtils.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeFindDependencyMacro.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeParseImplicitIncludeInfo.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeParseImplicitLinkInfo.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeParseLibraryArchitecture.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCCompiler.cmake.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystem.cmake.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeTestCXXCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeTestCompilerCommon.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeTestRCCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckCXXSourceCompiles.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported\CMakeLists-CXX.txt.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported\foo.cpp;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported\main.cpp;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIncludeFileCXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckLibraryExists.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\ADSP-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\ARMCC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\ARMClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\AppleClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Borland-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Cray-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CrayClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\GHS-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IAR-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Intel-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVHPC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\OrangeC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\PGI-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\PathScale-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\SCO-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\TI-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Tasking-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Watcom-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CompilerId\VS-10.vcxproj.in;G:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\FindThreads.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\GNUInstallDirs.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Internal\CheckSourceCompiles.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Internal\FeatureTesting.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Determine-CXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\3.28.1\CMakeCXXCompiler.cmake;I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\3.28.1\CMakeRCCompiler.cmake;I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\3.28.1\CMakeSystem.cmake;I:\GitHub\PauseAfterLoadUnscripted\cmake\version.rc.in;I:\GitHub\PauseAfterLoadUnscripted\vcpkg-configuration.json;I:\GitHub\PauseAfterLoadUnscripted\vcpkg.json;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE-targets-debug.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE-targets-release.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE-targets.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSEConfig.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-config-version.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-config.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-targets-debug.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-targets-release.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-targets.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfig.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigTargets-debug.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigTargets-release.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigTargets.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigVersion.cmake;I:\GitHub\vcpkg\scripts\buildsystems\vcpkg.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule I:/GitHub/PauseAfterLoadUnscripted/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"G:\Program Files\CMake\bin\cmake.exe" -SI:/GitHub/PauseAfterLoadUnscripted -BI:/GitHub/PauseAfterLoadUnscripted --check-stamp-file I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXCompiler.cmake.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXCompilerABI.cpp;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCompilerIdDetection.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDependentOption.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCXXCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompileFeatures.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompilerABI.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompilerId.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineRCCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineSystem.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeFindBinUtils.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeFindDependencyMacro.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeParseImplicitIncludeInfo.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeParseImplicitLinkInfo.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeParseLibraryArchitecture.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCCompiler.cmake.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystem.cmake.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeTestCXXCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeTestCompilerCommon.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeTestRCCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckCXXSourceCompiles.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported\CMakeLists-CXX.txt.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported\foo.cpp;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported\main.cpp;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIncludeFileCXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckLibraryExists.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\ADSP-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\ARMCC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\ARMClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\AppleClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Borland-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Cray-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CrayClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\GHS-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IAR-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Intel-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVHPC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\OrangeC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\PGI-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\PathScale-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\SCO-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\TI-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Tasking-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Watcom-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CompilerId\VS-10.vcxproj.in;G:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\FindThreads.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\GNUInstallDirs.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Internal\CheckSourceCompiles.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Internal\FeatureTesting.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Determine-CXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\3.28.1\CMakeCXXCompiler.cmake;I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\3.28.1\CMakeRCCompiler.cmake;I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\3.28.1\CMakeSystem.cmake;I:\GitHub\PauseAfterLoadUnscripted\cmake\version.rc.in;I:\GitHub\PauseAfterLoadUnscripted\vcpkg-configuration.json;I:\GitHub\PauseAfterLoadUnscripted\vcpkg.json;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE-targets-debug.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE-targets-release.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE-targets.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSEConfig.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-config-version.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-config.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-targets-debug.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-targets-release.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-targets.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfig.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigTargets-debug.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigTargets-release.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigTargets.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigVersion.cmake;I:\GitHub\vcpkg\scripts\buildsystems\vcpkg.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule I:/GitHub/PauseAfterLoadUnscripted/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"G:\Program Files\CMake\bin\cmake.exe" -SI:/GitHub/PauseAfterLoadUnscripted -BI:/GitHub/PauseAfterLoadUnscripted --check-stamp-file I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXCompiler.cmake.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXCompilerABI.cpp;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeCompilerIdDetection.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDependentOption.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCXXCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompileFeatures.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompilerABI.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineCompilerId.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineRCCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeDetermineSystem.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeFindBinUtils.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeFindDependencyMacro.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeParseImplicitIncludeInfo.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeParseImplicitLinkInfo.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeParseLibraryArchitecture.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCCompiler.cmake.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeRCInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystem.cmake.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeTestCXXCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeTestCompilerCommon.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CMakeTestRCCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckCXXSourceCompiles.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported\CMakeLists-CXX.txt.in;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported\foo.cpp;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIPOSupported\main.cpp;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckIncludeFileCXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CheckLibraryExists.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\ADSP-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\ARMCC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\ARMClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\AppleClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Borland-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Cray-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\CrayClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\GHS-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IAR-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Intel-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\MSVC.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVHPC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\OrangeC-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\PGI-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\PathScale-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\SCO-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\TI-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Tasking-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\Watcom-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\CompilerId\VS-10.vcxproj.in;G:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\FindPackageMessage.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\FindThreads.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\GNUInstallDirs.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Internal\CheckSourceCompiles.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Internal\FeatureTesting.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Determine-CXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\Windows.cmake;G:\Program Files\CMake\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\3.28.1\CMakeCXXCompiler.cmake;I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\3.28.1\CMakeRCCompiler.cmake;I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\3.28.1\CMakeSystem.cmake;I:\GitHub\PauseAfterLoadUnscripted\cmake\version.rc.in;I:\GitHub\PauseAfterLoadUnscripted\vcpkg-configuration.json;I:\GitHub\PauseAfterLoadUnscripted\vcpkg.json;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE-targets-debug.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE-targets-release.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE-targets.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSE.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\CommonLibSSE\CommonLibSSEConfig.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-config-version.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-config.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-targets-debug.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-targets-release.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\fmt\fmt-targets.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfig.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigTargets-debug.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigTargets-release.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigTargets.cmake;I:\GitHub\PauseAfterLoadUnscripted\vcpkg_installed\x64-windows\share\spdlog\spdlogConfigVersion.cmake;I:\GitHub\vcpkg\scripts\buildsystems\vcpkg.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\PauseAfterLoadUnscripted.dir\cmake_pch.cxx">
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Debug/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Debug/cmake_pch.hxx</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:/GitHub/PauseAfterLoadUnscripted/PauseAfterLoadUnscripted.dir/Debug/cmake_pch.pch</PrecompiledHeaderOutputFile>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Release/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Release/cmake_pch.hxx</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:/GitHub/PauseAfterLoadUnscripted/PauseAfterLoadUnscripted.dir/Release/cmake_pch.pch</PrecompiledHeaderOutputFile>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/MinSizeRel/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/MinSizeRel/cmake_pch.hxx</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">I:/GitHub/PauseAfterLoadUnscripted/PauseAfterLoadUnscripted.dir/MinSizeRel/cmake_pch.pch</PrecompiledHeaderOutputFile>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/RelWithDebInfo/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/RelWithDebInfo/cmake_pch.hxx</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">I:/GitHub/PauseAfterLoadUnscripted/PauseAfterLoadUnscripted.dir/RelWithDebInfo/cmake_pch.pch</PrecompiledHeaderOutputFile>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</ScanSourceforModuleDependencies>
    </ClCompile>
    <ClCompile Include="I:\GitHub\PauseAfterLoadUnscripted\src\Data\SettingsCache.cpp">
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Debug/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Release/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/MinSizeRel/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/RelWithDebInfo/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</ScanSourceforModuleDependencies>
    </ClCompile>
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\src\Data\SettingsCache.h" />
    <ClCompile Include="I:\GitHub\PauseAfterLoadUnscripted\src\Data\SimpleIni.cpp">
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Debug/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Release/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/MinSizeRel/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/RelWithDebInfo/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</ScanSourceforModuleDependencies>
    </ClCompile>
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\src\Data\SimpleIni.h" />
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\src\Pausing\InputListener.h" />
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\src\Pausing\PauseHandler.h" />
    <ClCompile Include="I:\GitHub\PauseAfterLoadUnscripted\src\Utilities\LogStackWalker.cpp">
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Debug/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Release/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/MinSizeRel/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/RelWithDebInfo/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</ScanSourceforModuleDependencies>
    </ClCompile>
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\src\Utilities\LogStackWalker.h" />
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\src\Utilities\LogWrapper.h" />
    <ClCompile Include="I:\GitHub\PauseAfterLoadUnscripted\src\Utilities\RecursiveLock.cpp">
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Debug/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Release/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/MinSizeRel/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/RelWithDebInfo/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</ScanSourceforModuleDependencies>
    </ClCompile>
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\src\Utilities\RecursiveLock.h" />
    <ClCompile Include="I:\GitHub\PauseAfterLoadUnscripted\src\Utilities\StackWalker.cpp">
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Debug/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Release/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/MinSizeRel/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/RelWithDebInfo/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</ScanSourceforModuleDependencies>
    </ClCompile>
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\src\Utilities\StackWalker.h" />
    <ClCompile Include="I:\GitHub\PauseAfterLoadUnscripted\src\Utilities\utils.cpp">
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\src\Utilities\utils.h" />
    <ClCompile Include="I:\GitHub\PauseAfterLoadUnscripted\src\Utilities\version.cpp">
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\src\Utilities\version.h" />
    <ClCompile Include="I:\GitHub\PauseAfterLoadUnscripted\src\main.cpp">
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Debug/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Release/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/MinSizeRel/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/RelWithDebInfo/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</ScanSourceforModuleDependencies>
    </ClCompile>
    <ResourceCompile Include="I:\GitHub\PauseAfterLoadUnscripted\version.rc">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">NotUsing</PrecompiledHeader>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</ScanSourceforModuleDependencies>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">NotUsing</PrecompiledHeader>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</ScanSourceforModuleDependencies>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">NotUsing</PrecompiledHeader>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</ScanSourceforModuleDependencies>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">NotUsing</PrecompiledHeader>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</ScanSourceforModuleDependencies>
    </ResourceCompile>
    <ClCompile Include="I:\GitHub\PauseAfterLoadUnscripted\__PauseAfterLoadUnscriptedPlugin.cpp">
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Debug/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/Release/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/MinSizeRel/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</ScanSourceforModuleDependencies>
      <ForcedIncludeFiles Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">I:/GitHub/PauseAfterLoadUnscripted/CMakeFiles/PauseAfterLoadUnscripted.dir/RelWithDebInfo/cmake_pch.hxx;%(ForcedIncludeFiles)</ForcedIncludeFiles>
      <ScanSourceforModuleDependencies Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</ScanSourceforModuleDependencies>
    </ClCompile>
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\PauseAfterLoadUnscripted.dir\Debug\cmake_pch.hxx" />
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\PauseAfterLoadUnscripted.dir\Release\cmake_pch.hxx" />
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\PauseAfterLoadUnscripted.dir\MinSizeRel\cmake_pch.hxx" />
    <ClInclude Include="I:\GitHub\PauseAfterLoadUnscripted\CMakeFiles\PauseAfterLoadUnscripted.dir\RelWithDebInfo\cmake_pch.hxx" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="I:\GitHub\PauseAfterLoadUnscripted\ZERO_CHECK.vcxproj">
      <Project>{3EC6EB3B-F121-3DFA-AF53-2B42D00E33E2}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>